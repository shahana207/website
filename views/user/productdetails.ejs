<%- include("../../views/partials/user/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fazion - Product Details</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body {
            font-family: 'Nunito Sans', sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
        }

        .container1 {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }
.size-details.low-stock {
    color: #e74c3c;
    font-weight: 600;
}
        /* Product Gallery */
        .product-gallery {
            flex: 1;
            min-width: 300px;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            position: relative;
        }

        .zoom-container {
            position: relative;
            overflow: hidden;
            cursor: zoom-in;
        }

        .main-image {
            width: 100%;
            height: 400px;
            object-fit: contain;
            border-radius: 5px;
            margin-bottom: 15px;
            display: block;
            transition: transform 0.2s ease;
        }

        .thumbnails {
            display: flex;
            gap: 10px;
            overflow-x: auto;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border: 2px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            transition: border-color 0.3s;
        }

        .thumbnail:hover, .thumbnail.active {
            border-color: #000;
        }

        /* Product Info */
        .product-info {
            flex: 2;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .product-info h1 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 10px;
            color: #333;
        }

        .product-price {
            font-size: 24px;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .original-price {
            font-size: 18px;
            color: #999;
            text-decoration: line-through;
        }
.size-details.low-stock {
    color: #e74c3c;
    font-weight: 600;
}
        .product-meta {
            margin-bottom: 15px;
        }

        .product-meta p {
            margin: 5px 0;
            font-size: 14px;
            color: #555;
        }

        .product-meta p span {
            font-weight: 600;
            color: #333;
        }

        .stock-status {
            font-size: 14px;
            margin-bottom: 15px;
        }

        .in-stock {
            color: #27ae60;
            font-weight: 600;
        }

        .out-of-stock {
            color: #e74c3c;
            font-weight: 600;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        .quantity-selector button {
            width: 40px;
            height: 40px;
            border: 1px solid #ddd;
            background-color: #fff;
            font-size: 18px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .quantity-selector button:hover {
            background-color: #f5f5f5;
        }

        .quantity-selector input {
            width: 60px;
            height: 40px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .add-to-cart {
            background-color: #000;
            color: #fff;
            padding: 12px 80px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.3s;
        }

        .add-to-cart:hover {
            background-color: #333;
        }

        .add-to-cart:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .add-to-whishlist {
            border: 2px solid #e74c3c;
            background-color: #fff;
            color: #e74c3c;
            padding: 10px 100px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }

        .add-to-whishlist:hover {
            background-color: #ffe6e6;
        }

        .add-to-whishlist.in-wishlist {
            background-color: #e74c3c;
            color: #fff;
            border-color: #e74c3c;
        }

        .size-options {
            margin-bottom: 20px;
        }

        .size-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .size-button {
            padding: 8px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #fff;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
            position: relative;
        }

        .size-button:hover {
            background-color: #f5f5f5;
        }

        .size-button.active {
            background-color: #000;
            color: #fff;
            border-color: #000;
        }

        .size-button.disabled {
            background-color: #f5f5f5;
            color: #999;
            border-color: #ddd;
            cursor: not-allowed;
        }

        .size-details {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
            display: block;
        }

        .color-options {
            margin-bottom: 20px;
        }

        .color-options span {
            display: inline-block;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            margin-right: 8px;
            cursor: pointer;
            border: 2px solid #ddd;
        }

        .color-options span.active {
            border-color: #333;
        }

        /* Description and Reviews */
        .description-reviews {
            flex: 100%;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            margin-top: 20px;
        }

        .description-reviews h2 {
            font-size: 20px;
            font-weight: 700;
            margin-bottom: 15px;
            color: #333;
        }

        .description-reviews p {
            font-size: 14px;
            color: #666;
            line-height: 1.6;
            margin-bottom: 20px;
        }

        /* Related Products */
        .zz-related-products {
            padding-top: 40px;
            margin-top: 40px;
            border-top: 1px solid #eee;
            flex: 100%;
        }

        .zz-section-title {
            font-size: 24px;
            font-weight: 800;
            margin-bottom: 25px;
            color: #222;
            position: relative;
            padding-bottom: 10px;
            text-align: center;
        }

        .zz-section-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 60px;
            height: 4px;
            background-color: #e74c3c;
            border-radius: 2px;
        }

        .product-item {
            border: 1px solid #e5e5e5;
            border-radius: 10px;
            background-color: #fff;
            transition: all 0.3s ease;
            margin-bottom: 20px;
            height: 100%;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .product-item:hover {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
            transform: translateY(-5px);
        }

        .product-img-wrap {
            position: relative;
            padding: 15px;
            background-color: #f5f5f5;
            text-align: center;
            height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-img-wrap img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }

        .wishlist-btn a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 35px;
            background-color: white;
            border-radius: 50%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.15);
            color: #e74c3c;
            transition: all 0.3s ease;
        }

        .wishlist-btn a:hover {
            color: #c0392b;
            transform: scale(1.2);
        }

        .product-details {
            padding: 15px;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
        }

        .product-details h6 {
            font-size: 16px;
            margin-bottom: 8px;
            color: #333;
            font-weight: 600;
            line-height: 1.4;
        }

        .price-box {
            font-weight: 700;
            font-size: 18px;
            margin-bottom: 15px;
            color: #333;
        }

        .cart-btn {
            display: block;
            width: 100%;
            padding: 10px 0;
            background-color: #000;
            color: #fff;
            text-align: center;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .cart-btn:hover {
            background-color: #333;
            transform: translateY(-2px);
        }

        .product-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: #27ae60;
            color: white;
            padding: 5px 10px;
            border-radius: 3px;
            font-size: 12px;
            font-weight: 600;
            z-index: 5;
        }

        .offer-box {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 15px;
        }

        .offer-box h4 {
            font-size: 16px;
            color: #e74c3c;
            margin-bottom: 5px;
        }

        /* Breadcrumb */
        .zz-breadcrumb-area {
            background-color: #f9f9f9;
            padding: 20px 0;
        }

        .zz-breadcrumb {
            display: flex;
            flex-wrap: wrap;
            padding: 0;
            margin: 0;
            list-style: none;
            background: transparent;
        }

        .zz-breadcrumb-item {
            font-size: 14px;
            color: #555;
            display: flex;
            align-items: center;
        }

        .zz-breadcrumb-item + .zz-breadcrumb-item::before {
            content: "›";
            padding: 0 8px;
            color: #999;
            font-size: 13px;
        }

        .zz-breadcrumb-item a {
            text-decoration: none;
            color: #007bff;
            transition: color 0.3s ease;
        }

        .zz-breadcrumb-item a:hover {
            color: #0056b3;
            text-decoration: underline;
        }

        .zz-breadcrumb-item.active {
            color: #6c757d;
            font-weight: 500;
            cursor: default;
        }

        /* Responsive Design */
        @media (max-width: 991px) {
            .container1 {
                flex-direction: column;
            }

            .product-gallery, .product-info {
                width: 100%;
            }

            .main-image {
                height: 300px;
            }
        }

        @media (max-width: 767px) {
            .main-image {
                height: 250px;
            }

            .thumbnail {
                width: 50px;
                height: 50px;
            }

            .product-info h1 {
                font-size: 24px;
            }

            .product-price {
                font-size: 20px;
            }

            .zoom-container {
                cursor: default;
            }
        }
    </style>
</head>
<body>
    <div class="zz-breadcrumb-area">
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb zz-breadcrumb">
                    <li class="breadcrumb-item zz-breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item zz-breadcrumb-item" aria-current="page"><a href="/shop">Shop</a></li>
                    <li class="breadcrumb-item zz-breadcrumb-item active" aria-current="page">Product Details</li>
                </ol>
            </nav>
        </div>
    </div>
    
    <div class="container1">
        <div class="product-gallery">
            <% if (product.productOffer > 0) { %>
                <div class="product-badge">
                    <%= product.productOffer %>% OFF
                </div>
            <% } %>
            <div class="zoom-container">
                <img src="/Uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="main-image" id="mainImage">
            </div>
            <div class="thumbnails">
                <% product.productImage.forEach((image, index) => { %>
                    <img src="/Uploads/product-images/<%= image %>" alt="<%= product.productName %> thumbnail <%= index + 1 %>" class="thumbnail <%= index === 0 ? 'active' : '' %>" onclick="changeMainImage(this)">
                <% }) %>
            </div>
        </div>

        <!-- Product Info -->
        <div class="product-info">
            <h1><%= product.productName %></h1>
            <div class="product-price" id="productPrice">
                <% if (offerDetails.bestOffer > 0) { %>
                    <span class="original-price">₹ <%= product.salePrice.toLocaleString('en-IN') %></span>
                    <span>₹ <%= offerDetails.discountedPrice.toLocaleString('en-IN') %></span>
                <% } else { %>
                    ₹ <%= product.salePrice.toLocaleString('en-IN') %>
                <% } %>
            </div>

            <!-- Offer Box -->
            <% if (offerDetails.bestOffer > 0) { %>
                <div class="offer-box">
                    <h4>Available Offers</h4>
                    <p>
                        <i class="fas fa-gift" style="color: #e74c3c; margin-right: 5px;"></i>
                        Deal of the Day: <%= offerDetails.bestOffer %>% OFF
                        <% if (offerDetails.offerName) { %>
                            (<%= offerDetails.offerName %>)
                        <% } %>
                    </p>
                </div>
            <% } %>

            <div class="product-meta">
                <% if (product.category && product.category.name) { %>
                    <p>Category: <span><%= product.category.name %></span></p>
                <% } else { %>
                    <p>Category: <span>Uncategorized</span></p>
                <% } %>
                <% if (product.brand && product.brand.name) { %>
                    <p>Brand: <span><%= product.brand.name %></span></p>
                <% } else { %>
                    <p>Brand: <span>Unknown</span></p>
                <% } %>
                <p>SKU: <span><%= product._id %></span></p>
                <!-- <div class="stock-status" id="stockStatus">
                    <% if (product.status === "Available" && product.quantity > 0) { %>
                        <span class="in-stock">In Stock (<%= product.quantity %> available)</span>
                    <% } else { %>
                        <span class="out-of-stock">Out of Stock</span>
                    <% } %>
                </div> -->
            </div>

            <% if (product.color && product.color.length > 0) { %>
                <div class="color-options">
                    <p>Colors:</p>
                    <% product.color.forEach((color, index) => { %>
                        <span style="background-color: <%= color %>" class="<%= index === 0 ? 'active' : '' %>" onclick="selectColor(this, '<%= color %>')"></span>
                    <% }) %>
                    <input type="hidden" name="selectedColor" id="selectedColor" value="<%= product.color[0] %>">
                </div>
            <% } %>

     <% if (product.sizeVariants && product.sizeVariants.length > 0) { %>
    <div class="size-options">
        <p>Select Size:</p>
        <div class="size-buttons">
            <% product.sizeVariants.forEach((variant, index) => { %>
                <% 
                    let stock = variant.quantity || 0;
                    let isOutOfStock = stock <= 0;
                    let discountedPrice = offerDetails.bestOffer > 0 ? offerDetails.discountedPrice : product.salePrice;
                %>
                <button 
                    class="size-button <%= index === 0 ? 'active' : '' %> <%= isOutOfStock ? 'disabled' : '' %>" 
                    data-size="<%= variant.size %>" 
                    data-stock="<%= stock %>" 
                    data-price="<%= product.salePrice %>" 
                    data-discounted-price="<%= discountedPrice %>" 
                    onclick="selectSize(this, '<%= variant.size %>')"
                    <%= isOutOfStock ? 'disabled' : '' %>
                >
                    <%= variant.size %>
                    <span class="size-details <%= stock <= 5 && !isOutOfStock ? 'low-stock' : '' %>">
                        <% if (isOutOfStock) { %>
                            Out of Stock
                        <% } else if (stock <= 5) { %>
                            Only <%= stock %> left!
                        <% } %>
                    </span>
                </button>
            <% }) %>
        </div>
        <input type="hidden" name="selectedSize" id="selectedSize" value="<%= product.sizeVariants[0].size %>">
    </div>
<% } %>
            <!-- Quantity Selector -->
            <% if (product.status === "Available" && product.quantity > 0) { %>
                <div class="quantity-selector">
                    <p style="margin-right: 10px;">Quantity:</p>
                    <button onclick="updateQuantity(-1)">-</button>
                    <input type="text" id="quantity" value="1" readonly>
                    <button onclick="updateQuantity(1)">+</button>
                </div>
            <% } %>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <% if (product.status === "Available" && product.quantity > 0) { %>
                    <button class="add-to-cart" id="addToCartBtn" onclick="addToCart('<%= product._id %>')">ADD TO CART</button>
                    <button class="add-to-whishlist <%= isInWishlist ? 'in-wishlist' : '' %>" onclick="toggleWishlist('<%= product._id %>')">
                        <i class="fas fa-heart"></i>
                    </button>
                <% } else { %>
                    <button class="add-to-cart" disabled>OUT OF STOCK</button>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Description and Reviews -->
    <div class="description-reviews">
        <h2>Description</h2>
        <p><%= product.description || 'No description available' %></p>

        <h2>Reviews</h2>
        <div class="reviews-list">
            <% if (product.reviews && product.reviews.length > 0) { %>
                <% product.reviews.forEach(review => { %>
                    <div class="review-item">
                        <h4><%= review.userName %></h4>
                        <div class="rating">
                            <% for(let i = 1; i <= 5; i++) { %>
                                <i class="fas fa-star <%= i <= review.rating ? 'text-warning' : 'text-muted' %>"></i>
                            <% } %>
                        </div>
                        <p><%= review.comment %></p>
                        <small><%= new Date(review.date).toLocaleDateString() %></small>
                    </div>
                <% }) %>
            <% } else { %>
                <p>No reviews yet. Be the first to review this product!</p>
            <% } %>
        </div>
    </div>

    <!-- Related Products -->
    <div class="zz-related-products">
        <h2 class="zz-section-title">Related Products</h2>
        <div class="row">
            <% if (relatedProducts && relatedProducts.length > 0) { %>
                <% relatedProducts.forEach(relatedProduct => { %>
                    <div class="col-lg-3 col-md-4 col-sm-6 col-12 mb-4">
                        <div class="product-item">
                            <div class="product-img-wrap">
                                <a href="productDetails?id=<%= relatedProduct._id %>">
                                    <img src="/Uploads/product-images/<%= relatedProduct.productImage[0] %>" alt="<%= relatedProduct.productName %>">
                                </a>
                                <div class="wishlist-btn">
                                    <a href="/addToWishlist?id=<%= relatedProduct._id %>" aria-label="Add to wishlist">
                                        <i class="fa fa-heart"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="product-details">
                                <h6><a href="productDetails?id=<%= relatedProduct._id %>" class="text-dark text-decoration-none"><%= relatedProduct.productName %></a></h6>
                                <div class="price-box">
                                    <% if (relatedProduct.offerDetails.bestOffer > 0) { %>
                                        <span class="original-price" style="text-decoration: line-through; color: #999; margin-right: 8px;">₹ <%= relatedProduct.salePrice.toLocaleString('en-IN') %></span>
                                        <span style="color: #e74c3c; font-weight: bold;">₹ <%= relatedProduct.offerDetails.discountedPrice.toLocaleString('en-IN') %></span>
                                        <div style="display: inline-block; margin-left: 8px; font-size: 12px; color: #e74c3c;">
                                            <%= relatedProduct.offerDetails.bestOffer %>% OFF
                                        </div>
                                    <% } else { %>
                                        ₹ <%= relatedProduct.salePrice.toLocaleString('en-IN') %>
                                    <% } %>
                                </div>
                                <a href="/addToCart?id=<%= relatedProduct._id %>" class="cart-btn">ADD TO CART</a>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="col-12 text-center py-3">
                    <p>No related products found</p>
                </div>
            <% } %>
        </div>
    </div>
</div>

<%- include("../partials/user/footer") %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Store initial product data for reference
    const productData = {
        basePrice: <%= product.salePrice %>,
        baseDiscountedPrice: <%= offerDetails.bestOffer > 0 ? offerDetails.discountedPrice : product.salePrice %>,
        baseStock: <%= product.quantity %>
    };

    function selectSize(button, size) {
        // Update active state
        document.querySelectorAll('.size-button').forEach(btn => {
            btn.classList.remove('active');
        });
        button.classList.add('active');
        document.getElementById('selectedSize').value = size;

        // Update product details based on selected size variant
        const stock = parseInt(button.getAttribute('data-stock'));
        const price = parseFloat(button.getAttribute('data-price'));
        const discountedPrice = parseFloat(button.getAttribute('data-discounted-price'));

        // Update price
        const priceElement = document.getElementById('productPrice');
        priceElement.innerHTML = '';
        if (<%= offerDetails.bestOffer > 0 %>) {
            priceElement.innerHTML = `
                <span class="original-price">₹ ${price.toLocaleString('en-IN')}</span>
                <span>₹ ${discountedPrice.toLocaleString('en-IN')}</span>
            `;
        } else {
            priceElement.innerHTML = `₹ ${price.toLocaleString('en-IN')}`;
        }

        // Update stock status
        const stockStatusElement = document.getElementById('stockStatus');
        stockStatusElement.innerHTML = '';
        if (stock > 0) {
            stockStatusElement.innerHTML = `<span class="in-stock">In Stock (${stock} available)</span>`;
            document.getElementById('addToCartBtn').disabled = false;
        } else {
            stockStatusElement.innerHTML = `<span class="out-of-stock">Out of Stock</span>`;
            document.getElementById('addToCartBtn').disabled = true;
        }

        updateAddToCartParams();
    }

    function selectColor(element, color) {
        document.querySelectorAll('.color-options span').forEach(span => {
            span.classList.remove('active');
        });
        element.classList.add('active');
        document.getElementById('selectedColor').value = color;
        updateAddToCartParams();
    }

    function updateAddToCartParams() {
        const size = document.getElementById('selectedSize') ? document.getElementById('selectedSize').value : '';
        const color = document.getElementById('selectedColor') ? document.getElementById('selectedColor').value : '';
        return { size, color };
    }

    function updateQuantity(change) {
        const qtyInput = document.getElementById('quantity');
        let qty = parseInt(qtyInput.value);
        const selectedSizeButton = document.querySelector('.size-button.active');
        const maxStock = selectedSizeButton ? parseInt(selectedSizeButton.getAttribute('data-stock')) : productData.baseStock;

        qty = Math.max(1, Math.min(maxStock, qty + change));
        qtyInput.value = qty;
        updateAddToCartParams();
    }

    async function addToCart(productId) {
        const { size, color } = updateAddToCartParams();
        const qty = parseInt(document.getElementById('quantity').value);

        try {
            const response = await fetch("/addToCart", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    id: productId,
                    qty: qty,
                    size: size,
                    color: color
                })
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Added to Cart!',
                    text: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            } else if (result.redirect) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Authentication Required',
                    text: result.message || 'Please sign in to add to cart.',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = result.redirect;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'Failed to add to cart',
                    timer: 1500,
                    showConfirmButton: "OK"
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "Error: " + error.message || 'An error occurred while adding to cart',
                showConfirmButton: true
            });
        }
    }

    async function toggleWishlist(productId) {
        const wishlistBtn = document.querySelector('.add-to-whishlist');
        const isInWishlist = wishlistBtn.classList.contains('in-wishlist');
        const url = isInWishlist ? '/removeFromWishlist' : '/addToWishlist';
        const method = 'POST';

        try {
            const response = await fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ 
                    id: productId,
                    size: document.getElementById('selectedSize') ? document.getElementById('selectedSize').value : '',
                    color: document.getElementById('selectedColor') ? document.getElementById('selectedColor').value : ''
                })
            });

            const result = await response.json();

            if (result.success) {
                wishlistBtn.classList.toggle('in-wishlist');
                Swal.fire({
                    icon: 'success',
                    title: isInWishlist ? 'Removed from Wishlist!' : 'Added to Wishlist!',
                    text: result.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            } else if (result.redirect) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Authentication Required',
                    text: result.message || 'Please sign in to manage your wishlist.',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = result.redirect;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'Failed to update wishlist',
                    timer: 1500,
                    showConfirmButton: "OK"
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "Error: " + error.message || 'An error occurred while updating wishlist',
                showConfirmButton: true
            });
        }
    }

    function changeMainImage(thumbnail) {
        const mainImage = document.getElementById('mainImage');
        mainImage.src = thumbnail.src;
        
        document.querySelectorAll('.thumbnail').forEach(thumb => {
            thumb.classList.remove('active');
        });
        thumbnail.classList.add('active');

        // Reset zoom state
        mainImage.style.transform = 'scale(1)';
        mainImage.style.transformOrigin = 'center center';
    }

    document.addEventListener('DOMContentLoaded', function() {
        const thumbnails = document.querySelectorAll('.thumbnail');
        if (thumbnails.length > 0) {
            thumbnails[0].classList.add('active');
        }

        // In-Place Zoom Functionality
        const zoomContainer = document.querySelector('.zoom-container');
        const mainImage = document.getElementById('mainImage');

        let isZooming = false;
        let zoomLevel = 2; // Default zoom level

        zoomContainer.addEventListener('mouseenter', function() {
            isZooming = true;
        });

        zoomContainer.addEventListener('mouseleave', function() {
            isZooming = false;
            mainImage.style.transform = 'scale(1)';
            mainImage.style.transformOrigin = 'center center';
        });

        zoomContainer.addEventListener('mousemove', function(e) {
            if (!isZooming) return;

            const rect = zoomContainer.getBoundingClientRect();
            const mouseX = e.clientX - rect.left;
            const mouseY = e.clientY - rect.top;

            const imageWidth = rect.width;
            const imageHeight = rect.height;

            // Calculate the transform origin based on mouse position
            const originX = (mouseX / imageWidth) * 100;
            const originY = (mouseY / imageHeight) * 100;

            mainImage.style.transformOrigin = `${originX}% ${originY}%`;
            mainImage.style.transform = `scale(${zoomLevel})`;
        });

        // Optional: Adjust zoom level with mouse wheel
        zoomContainer.addEventListener('wheel', function(e) {
            e.preventDefault();
            if (!isZooming) return;

            zoomLevel += e.deltaY > 0 ? -0.2 : 0.2;
            zoomLevel = Math.max(1.5, Math.min(4, zoomLevel)); // Limit zoom level between 1.5x and 4x

            const rect = zoomContainer.getBoundingClientRect();
            const mouseX = e.clientX - rect.left;
            const mouseY = e.clientY - rect.top;

            const imageWidth = rect.width;
            const imageHeight = rect.height;

            const originX = (mouseX / imageWidth) * 100;
            const originY = (mouseY / imageHeight) * 100;

            mainImage.style.transformOrigin = `${originX}% ${originY}%`;
            mainImage.style.transform = `scale(${zoomLevel})`;
        });

        // Touch Support (Pinch to Zoom for Mobile)
        let initialDistance = 0;
        let initialZoomLevel = zoomLevel;

        zoomContainer.addEventListener('touchstart', function(e) {
            if (e.touches.length === 2) {
                e.preventDefault();
                const touch1 = e.touches[0];
                const touch2 = e.touches[1];
                initialDistance = Math.hypot(touch1.clientX - touch2.clientX, touch1.clientY - touch2.clientY);
                initialZoomLevel = zoomLevel;
            }
        });

        zoomContainer.addEventListener('touchmove', function(e) {
            if (e.touches.length === 2) {
                e.preventDefault();
                const touch1 = e.touches[0];
                const touch2 = e.touches[1];
                const currentDistance = Math.hypot(touch1.clientX - touch2.clientX, touch1.clientY - touch2.clientY);
                zoomLevel = initialZoomLevel * (currentDistance / initialDistance);
                zoomLevel = Math.max(1.5, Math.min(4, zoomLevel));

                const rect = zoomContainer.getBoundingClientRect();
                const touchX = (touch1.clientX + touch2.clientX) / 2 - rect.left;
                const touchY = (touch1.clientY + touch2.clientY) / 2 - rect.top;

                const imageWidth = rect.width;
                const imageHeight = rect.height;

                const originX = (touchX / imageWidth) * 100;
                const originY = (touchY / imageHeight) * 100;

                mainImage.style.transformOrigin = `${originX}% ${originY}%`;
                mainImage.style.transform = `scale(${zoomLevel})`;
            }
        });
    });
</script>
</body>
</html>
<%- include("../partials/user/footer") %>