<%- include("../partials/user/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fazion - Order Details</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body {
            background-color: #f9fafb;
            font-family: 'Nunito Sans', sans-serif;
            margin: 0;
            color: #333;
        }

        .zz-container {
            display: flex;
            padding: 40px 20px;
            min-height: calc(100vh - 140px);
            max-width: 1400px;
            margin: 0 auto;
        }

        .sidebar {
            width: 280px;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            flex-shrink: 0;
            margin-right: 30px;
        }

        .zz-order-details-container {
            flex: 1;
            background: #fff;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        }

        .zz-order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .zz-order-header h3 {
            font-size: 24px;
            font-weight: 700;
            margin: 0;
            color: #1a1a1a;
        }

        .zz-order-header p {
            font-size: 15px;
            color: #6b7280;
            margin: 8px 0 0;
        }

        .zz-order-status {
            color: #e67e22;
            font-weight: 600;
            text-transform: capitalize;
        }

        .zz-back-btn {
            color: #5b86e5;
            text-decoration: none;
            font-size: 15px;
            font-weight: 600;
            transition: color 0.3s;
        }

        .zz-back-btn:hover {
            color: #4a73c8;
            text-decoration: underline;
        }

        .zz-action-btn {
            background: linear-gradient(135deg, #5b86e5 0%, #36d1dc 100%);
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .zz-action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(91,134,229,0.3);
        }

        .zz-action-btn:disabled {
            background: #d1d5db;
            cursor: not-allowed;
        }

        .zz-action-btn.cancel {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        }

        .zz-action-btn.cancel:hover {
            box-shadow: 0 4px 12px rgba(231,76,60,0.3);
        }

        .zz-action-btn.return {
            background: linear-gradient(135deg, #f39c12 0%, #e08e0b 100%);
        }

        .zz-action-btn.return:hover {
            box-shadow: 0 4px 12px rgba(243,156,18,0.3);
        }

        .zz-action-btn.retry-payment {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        }

        .zz-action-btn.retry-payment:hover {
            box-shadow: 0 4px 12px rgba(52,152,219,0.3);
        }

        .zz-download-invoice-btn {
            background: linear-gradient(135deg, #5b86e5 0%, #36d1dc 100%);
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
        }

        .zz-download-invoice-btn:hover {
            background: linear-gradient(135deg, #5b86e5 0%, #36d1dc 100%);
        }

        .zz-shipping-address {
            background: #f0f7ff;
            padding: 25px;
            border-radius: 8px;
            margin-bottom: 30px;
        }

        .zz-shipping-address h4 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 15px;
            color: #1a1a1a;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .zz-shipping-address p {
            font-size: 15px;
            color: #4b5563;
            margin: 8px 0;
            line-height: 1.6;
        }

        .zz-order-items-section {
            margin-bottom: 30px;
        }

        .zz-order-items-section .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .zz-order-items-section h4 {
            font-size: 18px;
            font-weight: 600;
            color: #1a1a1a;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .zz-order-item {
            display: flex;
            align-items: center;
            padding: 20px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            margin-bottom: 15px;
            background-color: #fff;
            transition: box-shadow 0.3s;
        }

        .zz-order-item:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        }

        .zz-order-item-image {
            width: 100px;
            height: 100px;
            margin-right: 20px;
            flex-shrink: 0;
        }

        .zz-order-item-image img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            border-radius: 6px;
        }

        .zz-order-item-info {
            flex: 1;
            margin-right: 20px;
        }

        .zz-order-item-name {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 8px;
            color: #1a1a1a;
        }

        .zz-order-item-meta {
            font-size: 14px;
            color: #6b7280;
            line-height: 1.6;
        }

        .zz-order-item-meta .status-cancelled {
            color: #e74c3c;
            font-weight: 600;
        }

        .zz-order-item-price {
            font-size: 16px;
            font-weight: 700;
            color: #1a1a1a;
            margin-top: 8px;
        }

        .zz-order-summary {
            background: #f0f7ff;
            padding: 25px;
            border-radius: 8px;
        }

        .zz-order-summary h4 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 20px;
            color: #1a1a1a;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .zz-summary-item {
            display: flex;
            justify-content: space-between;
            font-size: 15px;
            margin-bottom: 15px;
            color: #4b5563;
        }

        .zz-summary-item.total {
            font-size: 18px;
            font-weight: 700;
            color: #1a1a1a;
            padding-top: 15px;
            border-top: 1px solid #e5e7eb;
        }

        @media (max-width: 992px) {
            .zz-container {
                flex-direction: column;
                padding: 30px 15px;
            }

            .sidebar {
                width: 100%;
                margin-right: 0;
                margin-bottom: 30px;
            }

            .zz-order-details-container {
                padding: 20px;
            }
        }

        @media (max-width: 768px) {
            .zz-order-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .zz-order-items-section .header {
                flex-direction: column;
                align-items: flex-start;
            }

            .zz-order-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
                padding: 15px;
            }

            .zz-order-item-image {
                width: 120px;
                height: 120px;
                margin-right: 0;
            }

            .zz-order-item-info {
                margin-right: 0;
            }

            .zz-action-btn {
                width: 100%;
                text-align: center;
            }

            .zz-download-invoice-btn {
                width: 100%;
                text-align: center;
            }
        }

        @media (max-width: 576px) {
            .zz-order-header h3 {
                font-size: 20px;
            }

            .zz-shipping-address h4,
            .zz-order-items-section h4,
            .zz-order-summary h4 {
                font-size: 16px;
            }

            .zz-summary-item {
                font-size: 14px;
            }

            .zz-summary-item.total {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container zz-container">
        <%- include("../partials/user/sidebar", { active: 'orders' }) %>

        <div class="zz-order-details-container">
            <div class="zz-order-header">
    <div>
        <h3>Order Details <%= order.orderId %></h3>
        <p>
            <span class="zz-order-status" style="color: <%= order.status === 'Payment Failed' ? '#e74c3c' : '#e67e22' %>;"><%= order.status %></span> |
            Order Date: <%= order.createdOn.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) %>
        </p>
    </div>
    <div style="display: flex; gap: 10px;">
        <a href="/order" class="zz-back-btn" aria-label="Back to orders">Back to Orders</a>
        <a href="/download-invoice/<%= order.orderId %>" class="zz-download-invoice-btn" target="_blank" aria-label="Download invoice">Download Invoice</a>
        <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && order.status !== 'Payment Failed') { %>
            <button class="zz-action-btn cancel zz-cancel-order-btn" data-order-id="<%= order.orderId %>" aria-label="Cancel order">Cancel Order</button>
        <% } %>
        <% if (order.status === 'Payment Failed') { %>
            <a href="/retry-payment/<%= order._id %>" class="zz-action-btn retry-payment" aria-label="Retry payment">Retry Payment</a>
        <% } %>
    </div>
</div>
            <div class="zz-shipping-address">
                <h4><i class="fas fa-map-marker-alt"></i> Shipping Address</h4>
                <p><%= order.address.name %></p>
                <p><%= order.address.landMark %>, <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pincode %></p>
                <p>Phone: <%= order.address.phone %><%= order.address.altPhone ? ', Alt: ' + order.address.altPhone : '' %></p>
            </div>

            <div class="zz-order-items-section">
                <div class="header">
                    <h4><i class="fas fa-shopping-bag"></i> Order Items</h4>
                    <div>
                        <% if (order.orderedItems.length >= 2 && order.status !== 'Delivered' && order.status !== 'Cancelled') { %>
                            <button class="zz-action-btn cancel cancel-items-btn" style="display: none;">Cancel Selected Products</button>
                        <% } %>
                    </div>
                </div>
                <% order.orderedItems.forEach(item => { %>
                    <div class="zz-order-item">
                        <div class="zz-order-item-image">
                            <img src="/Uploads/product-images/<%= item.product?.productImage[0] || 'placeholder.jpg' %>" alt="<%= item.product?.productName || 'Product' %>">
                        </div>
                        <div class="zz-order-item-info">
                            <div class="zz-order-item-name"><%= item.product?.productName || 'Product Not Found' %></div>
                            <div class="zz-order-item-meta">
                                <% if (item.size) { %>
                                    <span>Size: <%= item.size %></span>
                                <% } %>
                                <% if (item.color) { %>
                                    <span> | Color: <%= item.color %></span>
                                <% } %>
                                <span> | Qty: <%= item.quantity %></span>
                                <% if (item.returnStatus !== 'Not Returned') { %>
                                    <span class="status-cancelled"> | Status: <%= item.returnStatus %></span>
                                <% } %>
                            </div>
                            <div class="zz-order-item-price">₹<%= (item.price * item.quantity).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %></div>
                        </div>
                        <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && item.returnStatus === 'Not Returned') { %>
                            <button class="zz-action-btn cancel cancel-item-btn" data-item-id="<%= item._id %>" data-order-id="<%= order.orderId %>" aria-label="Cancel product">Cancel Product</button>
                        <% } %>
                        <% if (order.status === 'Delivered' && item.returnStatus === 'Not Returned') { %>
                            <button class="zz-action-btn return return-item-btn" data-item-id="<%= item._id %>" data-order-id="<%= order.orderId %>" aria-label="Return product">Return Product</button>
                        <% } %>
                    </div>
                <% }) %>
            </div>

            <div class="zz-order-summary">
                <h4><i class="fas fa-file-invoice"></i> Order Summary</h4>
                <div class="zz-summary-item">
                    <span>Subtotal</span>
                    <span>₹<%= order.totalPrice.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %></span>
                </div>
                <% if (order.discount > 0) { %>
                    <div class="zz-summary-item">
                        <span>Discount</span>
                        <span>-₹<%= order.discount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %></span>
                    </div>
                <% } %>
                <div class="zz-summary-item">
                    <span>Shipping</span>
                    <span><%= order.shippingCharge ? '₹' + order.shippingCharge.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : 'Free' %></span>
                </div>
                <div class="zz-summary-item total">
                    <span>Grand Total</span>
                    <span>₹<%= order.finalAmount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %></span>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            $('.zz-cancel-order-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                Swal.fire({
                    title: 'Cancel Order',
                    text: 'Please provide a reason for cancelling this order:',
                    input: 'text',
                    showCancelButton: true,
                    confirmButtonText: 'Cancel Order',
                    cancelButtonText: 'Close',
                    preConfirm: (reason) => {
                        if (!reason) {
                            Swal.showValidationMessage('Reason is required');
                        }
                        return reason;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/cancel-order', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId, reason: result.value })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Cancelled!', data.message, 'success')
                                    .then(() => window.location.href = '/order');
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        })
                        .catch(error => {
                            Swal.fire('Error', error.message || 'Failed to cancel order', 'error');
                        });
                    }
                });
            });

            $('.cancel-item-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                const itemId = $(this).data('item-id');
                Swal.fire({
                    title: 'Cancel Item',
                    text: 'Please provide a reason for cancellation:',
                    input: 'text',
                    showCancelButton: true,
                    confirmButtonText: 'Cancel Item',
                    cancelButtonText: 'Close',
                    preConfirm: (reason) => {
                        if (!reason) {
                            Swal.showValidationMessage('Reason is required');
                        }
                        return reason;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/cancel-item', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId, itemId, reason: result.value })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Cancelled!', data.message, 'success')
                                    .then(() => window.location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        })
                        .catch(() => {
                            Swal.fire('Error', 'Failed to cancel item.', 'error');
                        });
                    }
                });
            });

            $('.return-item-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                const itemId = $(this).data('item-id');
                Swal.fire({
                    title: 'Return Item',
                    text: 'Please provide a reason for return:',
                    input: 'text',
                    showCancelButton: true,
                    confirmButtonText: 'Request Return',
                    cancelButtonText: 'Close',
                    preConfirm: (reason) => {
                        if (!reason) {
                            Swal.showValidationMessage('Reason is required');
                        }
                        return reason;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/return-item', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId, itemId, reason: result.value })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Requested!', data.message, 'success')
                                    .then(() => window.location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        })
                        .catch(() => {
                            Swal.fire('Error', 'Failed to request return.', 'error');
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>