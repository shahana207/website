<%- include("../partials/user/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fazion - Order Details</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/css/style.css" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        body {
            background-color: #f5f5f5;
            font-family: 'Nunito Sans', sans-serif;
        }
        .zz-order-details-container {
            padding: 30px 0;
        }
        .zz-order-details {
            background: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .zz-order-header {
            margin-bottom: 20px;
        }
        .zz-order-item {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }
        .zz-order-item-price .original-price {
            text-decoration: line-through;
            color: #777;
            font-weight: 400;
            margin-right: 8px;
        }
        .zz-order-item-price .offer-price {
            color: #e74c3c;
            font-weight: 700;
        }
        .zz-order-item-meta .offer-info {
            color: #27ae60;
            font-size: 12px;
        }
        .zz-order-summary {
            margin-top: 20px;
            font-size: 16px;
        }
        .zz-action-btn {
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="container zz-order-details-container">
        <h2 class="zz-checkout-title">Order Details</h2>
        <div class="zz-order-details">
            <div class="zz-order-header">
                <h3>Order ID: <%= order.orderId %></h3>
                <p>
                    Placed on: <%= order.createdOn.toLocaleDateString() %>
                    | Status: <%= order.status %>
                    | Payment: <%= order.paymentMethod %>
                </p>
            </div>
            <div class="zz-order-items">
                <% order.orderedItems.forEach(item => { %>
                    <div class="zz-order-item">
                        <div class="zz-order-item-image">
                            <img src="/Uploads/product-images/<%= item.product?.productImage[0] || 'placeholder.jpg' %>" alt="<%= item.product?.productName || 'Product' %>">
                        </div>
                        <div class="zz-order-item-info">
                            <div class="zz-order-item-name"><%= item.product?.productName || 'Product Not Found' %></div>
                            <div class="zz-order-item-meta">
                                <% if (item.size) { %>
                                    <span>Size: <%= item.size %></span>
                                <% } %>
                                <% if (item.color) { %>
                                    <span> | Color: <%= item.color %></span>
                                <% } %>
                                <span> | Qty: <%= item.quantity %></span>
                                <% if (item.returnStatus !== 'Not Returned') { %>
                                    <span> | Status: <%= item.returnStatus %></span>
                                <% } %>
                                <% if (item.bestOffer) { %>
                                    <div class="offer-info">Offer: <%= item.bestOffer.name %> (<%= item.bestOffer.discountAmount %>% off)</div>
                                <% } %>
                            </div>
                            <div class="zz-order-item-price">
                                <% if (item.bestOffer) { %>
                                    <span class="original-price">₹ <%= (item.bestOffer.originalPrice * item.quantity).toFixed(2) %></span>
                                    <span class="offer-price">₹ <%= (item.price * item.quantity).toFixed(2) %></span>
                                <% } else { %>
                                    ₹ <%= (item.price * item.quantity).toFixed(2) %>
                                <% } %>
                            </div>
                            <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && item.returnStatus === 'Not Returned') { %>
                                <button class="zz-action-btn btn btn-danger cancel-item-btn" data-item-id="<%= item._id %>" data-order-id="<%= order.orderId %>">Cancel Item</button>
                            <% } %>
                            <% if (order.status === 'Delivered' && item.returnStatus === 'Not Returned') { %>
                                <button class="zz-action-btn btn btn-warning return-item-btn" data-item-id="<%= item._id %>" data-order-id="<%= order.orderId %>">Return Item</button>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>
            <div class="zz-order-summary">
                <div><strong>Subtotal:</strong> ₹ <%= order.totalPrice.toFixed(2) %></div>
                <% if (order.offerDiscount > 0) { %>
                    <div><strong>Offer Discount:</strong> -₹ <%= order.offerDiscount.toFixed(2) %></div>
                <% } %>
                <div><strong>Shipping:</strong> <%= order.shippingCharge ? '₹' + order.shippingCharge.toFixed(2) : 'Free' %></div>

                <% if (order.discount > 0) { %>
                    <div><strong>Coupon Discount:</strong> -₹ <%= order.discount.toFixed(2) %></div>
                <% } %>
                <div><strong>Total:</strong> ₹ <%= order.finalAmount.toFixed(2) %></div>
            </div>
            <% if (order.status !== 'Delivered' && order.status !== 'Cancelled') { %>
                <button class="btn btn-danger cancel-order-btn" data-order-id="<%= order.orderId %>">Cancel Order</button>
            <% } %>
        </div>
    </div>

    <%- include("../partials/user/footer") %>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            $('.cancel-order-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you want to cancel this order?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, cancel it!',
                    cancelButtonText: 'No',
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/cancel-order',
                            method: 'POST',
                            data: { orderId },
                            success: function(response) {
                                Swal.fire('Cancelled!', 'Order has been cancelled.', 'success')
                                    .then(() => window.location.href = '/orders');
                            },
                            error: function() {
                                Swal.fire('Error', 'Failed to cancel order.', 'error');
                            }
                        });
                    }
                });
            });

            $('.cancel-item-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                const itemId = $(this).data('item-id');
                Swal.fire({
                    title: 'Cancel Item',
                    text: 'Please provide a reason for cancellation:',
                    input: 'text',
                    showCancelButton: true,
                    confirmButtonText: 'Cancel Item',
                    cancelButtonText: 'Close',
                    preConfirm: (reason) => {
                        if (!reason) {
                            Swal.showValidationMessage('Reason is required');
                        }
                        return reason;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/cancel-item',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ orderId, itemId, reason: result.value }),
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire('Cancelled!', response.message, 'success')
                                        .then(() => window.location.reload());
                                } else {
                                    Swal.fire('Error', response.message, 'error');
                                }
                            },
                            error: function() {
                                Swal.fire('Error', 'Failed to cancel item.', 'error');
                            }
                        });
                    }
                });
            });

            $('.return-item-btn').on('click', function() {
                const orderId = $(this).data('order-id');
                const itemId = $(this).data('item-id');
                Swal.fire({
                    title: 'Return Item',
                    text: 'Please provide a reason for return:',
                    input: 'text',
                    showCancelButton: true,
                    confirmButtonText: 'Request Return',
                    cancelButtonText: 'Close',
                    preConfirm: (reason) => {
                        if (!reason) {
                            Swal.showValidationMessage('Reason is required');
                        }
                        return reason;
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/return-item',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ orderId, itemId, reason: result.value }),
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire('Requested!', response.message, 'success')
                                        .then(() => window.location.reload());
                                } else {
                                    Swal.fire('Error', response.message, 'error');
                                }
                            },
                            error: function() {
                                Swal.fire('Error', 'Failed to request return.', 'error');
                            }
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>