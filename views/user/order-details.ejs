<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Fazion Order Details">
    <title>Order Details - <%= order.orderId %></title>

    <!-- External CSS dependencies -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="/css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="/css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="/css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="/css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="/css/style.css" type="text/css">
    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .order-details-page {
            font-family: 'Nunito Sans', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #2d3748;
            line-height: 1.6;
            background-color: #f7fafc;
        }

        .profile-container {
            display: flex;
            max-width: 1200px;
            margin: 40px auto;
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .content {
            flex: 1;
            padding: 40px;
        }

        .order-details-header {
            padding: 20px 0;
            border-bottom: 2px solid #edf2f7;
        }

        .order-details-header h1 {
            color: #1a202c;
            font-size: 26px;
            font-weight: 700;
            margin: 0;
        }

        .order-status {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
        }

        .status-badge {
            padding: 8px 20px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            text-transform: capitalize;
        }

        .status-pending { background-color: #f5c3a5; color: #bd620c; }
        .status-processing { background-color: #bee3f8; color: #2b6cb0; }
        .status-shipped { background-color: #c6f6d5; color: #276749; }
        .status-delivered { background-color: #b2f5ea; color: #234e52; }
        .status-cancelled { background-color: #fed7e2; color: #9b2c2c; }
        .status-return-request { background-color: #feebc8; color: #7b341e; }
        .status-returned { background-color: #e2e8f0; color: #4a5568; }

        .order-date {
            font-size: 16px;
            font-weight: 600;
            color: #1a1b1b;
        }

        .section-title {
            font-size: 20px;
            font-weight: 700;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            color: #1a202c;
        }

        .section-title i {
            margin-right: 12px;
            color: #1a1b1b;
            font-size: 24px;
        }

        .shipping-address {
            background-color: #f7fafc;
            padding: 24px;
            border-radius: 8px;
            margin-bottom: 40px;
            border: 1px solid #edf2f7;
        }

        .address-name {
            font-weight: 700;
            font-size: 16px;
            margin-bottom: 8px;
            color: #2d3748;
        }

        .address-details {
            font-size: 14px;
            color: #718096;
            line-height: 1.8;
        }

        .order-items {
            margin-bottom: 40px;
        }

        .item-card {
            display: flex;
            align-items: center;
            padding: 24px;
            border: 1px solid #edf2f7;
            border-radius: 8px;
            margin-bottom: 20px;
            background-color: #fff;
            transition: box-shadow 0.2s ease;
        }

        .item-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        }

        .item-image {
            width: 100px;
            min-width: 100px;
            height: 100px;
            margin-right: 24px;
        }

        .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 6px;
        }

        .item-details {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .item-name {
            font-size: 18px;
            font-weight: 700;
            margin-bottom: 8px;
            color: #2d3748;
        }

        .item-price {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 8px;
            color: #4a5568;
        }

        .item-status {
            font-size: 14px;
            color: #718096;
        }

        .item-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .action-btn {
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            border: none;
            transition: background-color 0.2s ease;
        }

        .btn-cancel {
            background-color: #e53e3e;
            color: #fff;
        }

        .btn-cancel:hover {
            background-color: #c53030;
        }

        .btn-return {
            background-color: #ed8936;
            color: #fff;
        }

        .btn-return:hover {
            background-color: #dd6b20;
        }

        .btn-disabled {
            background-color: #ccc;
            color: #666;
            cursor: not-allowed;
        }

        .order-summary {
            background-color: #f7fafc;
            padding: 24px;
            border-radius: 8px;
            border: 1px solid #edf2f7;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            font-size: 16px;
            color: #4a5568;
        }

        .summary-row.total {
            border-top: 2px solid #edf2f7;
            padding-top: 12px;
            margin-top: 12px;
            font-weight: 700;
            font-size: 18px;
            color: #2d3748;
        }

        .back-button {
            color: #3182ce;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            margin-bottom: 24px;
            font-weight: 600;
            font-size: 16px;
            transition: color 0.2s ease;
        }

        .back-button:hover {
            color: #2b6cb0;
        }

        .back-button i {
            margin-right: 8px;
        }

        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
                margin: 20px;
            }

            .content {
                padding: 24px;
            }

            .order-status {
                flex-direction: column;
                align-items: flex-start;
            }

            .order-date {
                margin-top: 12px;
            }

            .item-card {
                flex-direction: column;
                align-items: flex-start;
            }

            .item-image {
                margin-bottom: 16px;
                margin-right: 0;
                width: 80px;
                height: 80px;
            }

            .item-actions {
                margin-top: 16px;
                flex-wrap: wrap;
            }
        }

        @media (max-width: 576px) {
            .order-details-header h1 {
                font-size: 22px;
            }

            .section-title {
                font-size: 18px;
            }

            .item-name {
                font-size: 16px;
            }

            .item-price {
                font-size: 14px;
            }
        }
    </style>
</head>
<body class="order-details-page">
    <%- include("../partials/user/header") %>
    
    <div class="profile-container">
        <%- include("../partials/user/sidebar", { active: 'orders' }) %>
        
        <div class="content">
            <a href="/order" class="back-button">
                <i class="fa fa-arrow-left"></i> Back to Orders
            </a>
            
            <div class="order-details-header">
                <h1>Order #<%= order.orderId %></h1>
            </div>
            
            <div class="order-details-content">
                <div class="order-status">
                    <div class="status-badge status-<%= order.status.toLowerCase().replace(' ', '-') %>">
                        <%= order.status %>
                    </div>
                    <div class="order-date">
                        Order Date: <%= order.createdOn ? new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) : 'N/A' %>
                    </div>
                </div>
                
                <div class="shipping-info">
                    <h2 class="section-title">
                        <i class="fa fa-map-marker"></i> Shipping Address
                    </h2>
                    <div class="shipping-address">
                        <div class="address-name"><%= order.address?.name || 'N/A' %></div>
                        <div class="address-details">
                            <%= order.address?.addressType || '' %><br>
                            <%= order.address?.addressLine || '' %> <%= order.address?.landMark || '' %><br>
                            <%= order.address?.city || '' %>, <%= order.address?.state || '' %> <%= order.address?.pincode || '' %><br>
                            Phone: <%= order.address?.phone || 'N/A' %> <%= order.address?.altPhone ? ', Alt: ' + order.address.altPhone : '' %>
                        </div>
                    </div>
                </div>
                
                <div class="order-items">
                    <h2 class="section-title">
                        <i class="fa fa-shopping-bag"></i> Ordered Items
                    </h2>
                    
                    <% order.orderedItems.forEach(item => { %>
                        <div class="item-card">
                            <div class="item-image">
                                <img src="/Uploads/product-images/<%= item.product?.productImage?.[0] || '/images/placeholder.jpg' %>" alt="<%= item.product?.productName || 'Product' %>">
                            </div>
                            <div class="item-details">
                                <div class="item-name"><%= item.product?.productName || 'Unknown Product' %></div>
                                <div class="item-price">₹<%= item.price.toFixed(2) %> x Qty: <%= item.quantity %></div>
                                <div class="item-status">
                                    Return Status: <%= item.returnStatus %>
                                    <% if (item.returnStatus === 'Return Requested' || item.returnStatus === 'Returned') { %>
                                        <br>Reason: <%= item.returnReason || 'Not specified' %>
                                    <% } %>
                                    <% if (item.returnStatus === 'Cancelled') { %>
                                        <br>Reason: <%= item.returnReason || 'Not specified' %>
                                    <% } %>
                                </div>
                            </div>
                            <div class="item-actions">
                                <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && order.status !== 'Returned' && item.returnStatus === 'Not Returned') { %>
                                    <button class="action-btn btn-cancel" onclick="cancelItem('<%= order.orderId %>', '<%= item._id %>')">Cancel Item</button>
                                <% } else { %>
                                    <button class="action-btn btn-cancel btn-disabled" disabled>Cancel Item</button>
                                <% } %>
                                <% if (order.status === 'Delivered' && item.returnStatus === 'Not Returned') { %>
                                    <button class="action-btn btn-return" onclick="returnItem('<%= order.orderId %>', '<%= item._id %>')">Return Item</button>
                                <% } else if (item.returnStatus === 'Return Requested' || item.returnStatus === 'Returned') { %>
                                    <button class="action-btn btn-return btn-disabled" disabled>Return <%= item.returnStatus %></button>
                                <% } else { %>
                                    <button class="action-btn btn-return btn-disabled" disabled>Return Item</button>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                </div>
                
                <div class="order-summary">
                    <h2 class="section-title">
                        <i class="fa fa-file-text-o"></i> Order Summary
                    </h2>
                    <div class="summary-row">
                        <div>Subtotal</div>
                        <div>₹<%= order.orderedItems.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2) %></div>
                    </div>
                    <div class="summary-row">
                        <div>Discount</div>
                        <div>₹<%= order.discount?.toFixed(2) || '0.00' %></div>
                    </div>
                    <div class="summary-row">
                        <div>Shipping</div>
                        <div>₹0.00</div>
                    </div>
                    <div class="summary-row total">
                        <div>Grand Total</div>
                        <div>₹<%= order.finalAmount.toFixed(2) %></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <%- include("../partials/user/footer") %>
    
    <!-- External JS dependencies -->
    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/jquery.nice-select.min.js"></script>
    <script src="/js/jquery.nicescroll.min.js"></script>
    <script src="/js/jquery.magnific-popup.min.js"></script>
    <script src="/js/jquery.countdown.min.js"></script>
    <script src="/js/jquery.slicknav.js"></script>
    <script src="/js/mixitup.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/main.js"></script>
    
    <script>
        async function cancelItem(orderId, itemId) {
            const { value: reason } = await Swal.fire({
                title: 'Cancel Item',
                input: 'textarea',
                inputLabel: 'Please provide a reason for cancelling this item:',
                inputPlaceholder: 'Enter your reason here...',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#e53e3e',
                cancelButtonColor: '#718096',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You must provide a reason!';
                    }
                }
            });

            if (reason) {
                try {
                    const response = await fetch('/cancel-item', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId, itemId, reason }),
                    });
                    const result = await response.json();
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: result.message,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#2ecc71',
                            timer: 3000,
                            timerProgressBar: true
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#e53e3e'
                        });
                    }
                } catch (error) {
                    console.error('Error canceling item:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to cancel item. Please try again.',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#e53e3e'
                    });
                }
            }
        }

        async function returnItem(orderId, itemId) {
            const { value: reason } = await Swal.fire({
                title: 'Return Item',
                input: 'textarea',
                inputLabel: 'Please provide a reason for returning this item:',
                inputPlaceholder: 'Enter your reason here...',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#ed8936',
                cancelButtonColor: '#718096',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You must provide a reason!';
                    }
                }
            });

            if (reason) {
                try {
                    const response = await fetch('/return-item', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId, itemId, reason }),
                    });
                    const result = await response.json();
                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: result.message,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#2ecc71',
                            timer: 3000,
                            timerProgressBar: true
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#e53e3e'
                        });
                    }
                } catch (error) {
                    console.error('Error returning item:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to return item. Please try again.',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#e53e3e'
                    });
                }
            }
        }
    </script>
</body>
</html>