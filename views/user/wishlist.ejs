
<%- include("../partials/user/header") %>

<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>My Wishlist</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <span>Wishlist</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Wishlist Section Begin -->
<section class="wishlist spad">
    <div class="profile-container">
        <%- include("../partials/user/sidebar", { active: 'wishlist' }) %>
        
        <div class="container content">
            <% if (wishlist && wishlist.length > 0) { %>
                <div class="row justify-content-start">
                    <% wishlist.forEach(item => { %>
                        <div class="col-lg-4 col-md-6 col-sm-12 mb-4 d-flex" id="wishlist-item-<%= item.productId._id %>">
                            <div class="wishlist-card card w-100">
                                <div class="wishlist-img-container">
                                    <% if (item.productId.productImage && item.productId.productImage.length > 0) { %>
                                        <img class="card-img-top" src="/Uploads/product-images/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                                    <% } else { %>
                                        <div class="text-center p-5 bg-light">No Image Available</div>
                                    <% } %>
                                </div>
                                <div class="card-body d-flex flex-column justify-content-between">
                                    <div>
                                        <h5 class="card-title"><%= item.productId.productName %></h5>

                                        <% if(item.offerPrice) { %>
                                            <p class="wishlist-price text-muted" style="text-decoration: line-through;">₹<%= item.productId.salePrice %></p>
                                            <p class="wishlist-price" style="color: green;">₹<%= item.offerPrice %></p>
                                        <% } else { %>
                                            <p class="wishlist-price">₹<%= item.productId.salePrice %></p>
                                        <% } %>

                                        <p class="wishlist-date text-muted">Added on: <%= new Date(item.addedOn).toLocaleDateString() %></p>
                                    </div>

                                    <div class="d-flex justify-content-between mt-3">
                                        <button class="site-btn add-to-cart" data-product-id="<%= item.productId._id %>" <%= item.productId.quantity <= 0 ? 'disabled' : '' %>>
                                            <i class="fa fa-shopping-cart mr-1"></i> Add to Cart
                                        </button>
                                        <button class="site-btn site-btn--danger remove-from-wishlist" data-product-id="<%= item.productId._id %>">
                                            <i class="fa fa-trash mr-1"></i> Remove
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="empty-wishlist text-center p-5">
                    <i class="fa fa-heart-o fa-2x mb-3"></i>
                    <h3>Your wishlist is empty</h3>
                    <p>Add items to your wishlist to save them for later.</p>
                    <a href="/shop" class="site-btn mt-3">Browse Products</a>
                </div>
            <% } %>
        </div>
    </div>
</section>
<!-- Wishlist Section End -->

<!-- Search Model Begin -->
<div class="search-model">
    <div class="h-100 d-flex align-items-center justify-content-center">
        <div class="search-close-switch"><i class="fa fa-close"></i></div>
        <form class="search-model-form" action="/shop" method="GET">
            <input type="text" name="search" placeholder="Search products..." required>
        </form>
    </div>
</div>
<!-- Search Model End -->

<!-- Add SweetAlert2 and jQuery -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Check if SweetAlert2 is loaded
    if (typeof Swal === 'undefined') {
        console.error('SweetAlert2 is not loaded. Please check the CDN link or network connection.');
    }

    // Fallback function for alerts if Swal is not available
    const showAlert = (title, text, icon, options = {}) => {
        if (typeof Swal !== 'undefined') {
            return Swal.fire({
                title,
                text,
                icon,
                ...options
            });
        } else {
            // Fallback to native alert
            alert(`${title}\n${text}`);
            return Promise.resolve({ isConfirmed: true });
        }
    };

    // Add to Cart functionality
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-product-id');
            
            // Disable button to prevent multiple clicks
            this.disabled = true;
            const originalText = this.innerHTML;
            this.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Adding...';
            
            try {
                const response = await fetch('/addToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ id: productId, qty: 1 })
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const result = await response.json();
                
                if (result.success) {
                    // Show success message
                    await showAlert('Added to Cart!', result.message || 'Product added to cart successfully', 'success', {
                        timer: 1500,
                        showConfirmButton: false,
                        toast: true,
                        position: 'top-end'
                    });
                    
                    // Remove item from wishlist display
                    const item = document.getElementById(`wishlist-item-${productId}`);
                    if (item) {
                        item.style.transition = 'opacity 0.5s ease';
                        item.style.opacity = '0';
                        
                        setTimeout(() => {
                            item.remove();
                            
                            // Check if wishlist is now empty
                            const remainingItems = document.querySelectorAll('[id^="wishlist-item-"]');
                            if (remainingItems.length === 0) {
                                const container = document.querySelector('.content');
                                if (container) {
                                    container.innerHTML = `
                                        <div class="empty-wishlist text-center p-5">
                                            <i class="fa fa-heart-o fa-2x mb-3"></i>
                                            <h3>Your wishlist is empty</h3>
                                            <p>Add items to your wishlist to save them for later.</p>
                                            <a href="/shop" class="site-btn mt-3">Browse Products</a>
                                        </div>
                                    `;
                                }
                            }
                        }, 500);
                    }
                } else if (result.redirect) {
                    await showAlert('Authentication Required', result.message || 'Please login to continue', 'warning', {
                        timer: 2000,
                        showConfirmButton: false
                    });
                    setTimeout(() => {
                        window.location.href = result.redirect;
                    }, 2000);
                } else {
                    throw new Error(result.message || 'Failed to add product to cart');
                }
            } catch (error) {
                console.error('Add to cart error:', error);
                await showAlert('Error!', error.message || 'An error occurred while adding to cart', 'error', {
                    showConfirmButton: true
                });
            } finally {
                // Re-enable button
                this.disabled = false;
                this.innerHTML = originalText;
            }
        });
    });

    // Remove from Wishlist functionality
    document.querySelectorAll('.remove-from-wishlist').forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-product-id');
            
            try {
                const result = await showAlert('Remove from Wishlist?', 'This item will be removed from your wishlist', 'warning', {
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'Cancel'
                });
                
                if (result.isConfirmed) {
                    // Disable button to prevent multiple clicks
                    this.disabled = true;
                    const originalText = this.innerHTML;
                    this.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Removing...';
                    
                    const response = await fetch('/wishlist/remove', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ productId })
                    });
                    
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    
                    const data = await response.json();
                    
                    if (data.success !== false) {
                        // Remove item from display
                        const item = document.getElementById(`wishlist-item-${productId}`);
                        if (item) {
                            item.style.transition = 'opacity 0.5s ease';
                            item.style.opacity = '0';
                            
                            setTimeout(() => {
                                item.remove();
                                
                                // Check if wishlist is now empty
                                const remainingItems = document.querySelectorAll('[id^="wishlist-item-"]');
                                if (remainingItems.length === 0) {
                                    const container = document.querySelector('.content');
                                    if (container) {
                                        container.innerHTML = `
                                            <div class="empty-wishlist text-center p-5">
                                                <i class="fa fa-heart-o fa-2x mb-3"></i>
                                                <h3>Your wishlist is empty</h3>
                                                <p>Add items to your wishlist to save them for later.</p>
                                                <a href="/shop" class="site-btn mt-3">Browse Products</a>
                                            </div>
                                        `;
                                    }
                                }
                            }, 500);
                        }
                        
                        await showAlert('Removed!', 'Item has been removed from your wishlist', 'success', {
                            timer: 1500,
                            showConfirmButton: false,
                            toast: true,
                            position: 'top-end'
                        });
                    } else {
                        throw new Error(data.message || 'Failed to remove item from wishlist');
                    }
                    
                    // Re-enable button
                    this.disabled = false;
                    this.innerHTML = originalText;
                }
            } catch (error) {
                console.error('Remove from wishlist error:', error);
                await showAlert('Error!', error.message || 'An error occurred while removing from wishlist', 'error', {
                    showConfirmButton: true
                });
                
                // Re-enable button on error
                this.disabled = false;
                this.innerHTML = originalText;
            }
        });
    });
});
</script>

<style>
    /* Profile container styles */
    .profile-container {
        display: flex;
        max-width: 1200px;
        margin: 40px auto;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .content {
        flex: 1;
        padding: 20px;
    }

    /* Wishlist card styles */
    .wishlist-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }
    
    .wishlist-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
    }
    
    .wishlist-img-container {
        height: 200px;
        overflow: hidden;
    }
    
    .wishlist-img-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .wishlist-card:hover .wishlist-img-container img {
        transform: scale(1.05);
    }
    
    .wishlist-date {
        font-size: 12px;
        color: #777;
    }
    
    .wishlist-price {
        font-weight: bold;
        color: #333;
        font-size: 18px;
        margin: 10px 0;
    }
    
    .empty-wishlist {
        text-align: center;
        padding: 40px 0;
    }
    
    .empty-wishlist i {
        font-size: 60px;
        color: #ddd;
        margin-bottom: 20px;
    }
    
    /* Button styles */
    .site-btn {
        padding: 8px 16px;
        font-size: 14px;
        font-weight: 600;
        border-radius: 6px;
        flex: 1;
        text-align: center;
        min-width: 100px;
        max-width: 150px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .site-btn--danger {
        background-color: #e53935;
        color: white;
    }
    
    .site-btn--danger:hover {
        background-color: #c62828;
    }

    .site-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
        opacity: 0.6;
    }

    /* Adjust button container */
    .d-flex.justify-content-between {
        gap: 10px;
        flex-wrap: wrap;
    }

    /* Loading spinner animation */
    .fa-spin {
        animation: fa-spin 2s infinite linear;
    }

    @keyframes fa-spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(359deg);
        }
    }

    /* Toast notifications positioning */
    .swal2-toast {
        box-sizing: border-box;
        grid-column: 1;
        grid-row: 1;
        width: auto;
        padding: 1em;
        overflow-y: hidden;
        background: #fff;
        box-shadow: 0 0 1px rgba(0,0,0,.075), 0 1px 2px rgba(0,0,0,.075), 1px 2px 4px rgba(0,0,0,.075), 1px 3px 8px rgba(0,0,0,.075), 2px 4px 16px rgba(0,0,0,.075);
        pointer-events: all;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .profile-container {
            flex-direction: column;
            margin: 20px;
        }

        .content {
            padding: 15px;
        }

        .site-btn {
            padding: 6px 12px;
            font-size: 13px;
            min-width: 80px;
        }

        .wishlist-card {
            margin-bottom: 20px;
        }
    }

    @media (max-width: 576px) {
        .wishlist-img-container {
            height: 150px;
        }

        .wishlist-price {
            font-size: 16px;
        }

        .site-btn {
            font-size: 12px;
            min-width: 70px;
        }
    }
</style>

<%- include("../partials/user/footer") %>
