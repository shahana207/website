<%- include('../partials/admin/header') %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/style/css/adminheader.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #333;
            line-height: 1.6;
            overflow-x: hidden;
        }

        .content-wrapper {
            margin-left: 280px;
            padding: 100px 20px 20px;
            transition: margin-left 0.3s ease;
            min-height: 100vh;
        }

        .content-wrapper.collapsed {
            margin-left: 80px;
        }

        @media (max-width: 992px) {
            .content-wrapper {
                margin-left: 0;
                padding-top: 80px;
            }
        }

        .orders-details-container {
            max-width: 900px;
            margin: 0 auto;
            padding: 30px;
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        }

        .orders-details-title {
            text-align: center;
            font-size: 28px;
            margin-bottom: 30px;
            color: #1a1a1a;
            font-weight: 600;
            position: relative;
            padding-bottom: 15px;
        }

        .orders-details-title:after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, #3498db, #2c3e50);
        }

        .order-section {
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 10px;
            border-left: 4px solid #000507;
            transition: all 0.3s ease;
        }

        .order-section:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.05);
        }

        .section-title {
            font-size: 20px;
            color: #090d11;
            margin-bottom: 20px;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .section-title::before {
            content: "\f0a4";
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            margin-right: 10px;
            color: #000609;
        }

        .order-info {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 15px;
        }

        .info-item {
            flex: 1;
            min-width: 200px;
            margin-bottom: 15px;
        }

        .info-item label {
            font-size: 15px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 8px;
            display: block;
        }

        .info-item span {
            font-size: 14px;
            color: #333;
        }

        .order-item {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #e0e0e0;
            position: relative;
        }

        .product-image {
            width: 80px;
            height: 100px;
            background-color: #f5f5f5;
            border-radius: 8px;
            overflow: hidden;
            margin-right: 20px;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .product-details {
            flex: 1;
        }

        .product-name {
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin-bottom: 5px;
        }

        .product-qty,
        .product-price,
        .product-status {
            font-size: 14px;
            color: #777;
            margin-bottom: 5px;
        }

        .item-actions {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            display: flex;
            gap: 10px;
        }

        .action-btn {
            padding: 6px 12px;
            font-size: 13px;
            font-weight: 600;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .cancel-item-btn {
            background-color: #dc3545;
            color: white;
        }

        .cancel-item-btn:hover {
            background-color: #c82333;
        }

        .approve-return-btn {
            background-color: #28a745;
            color: white;
        }

        .approve-return-btn:hover {
            background-color: #218838;
        }

        .reject-return-btn {
            background-color: #6c757d;
            color: white;
        }

        .reject-return-btn:hover {
            background-color: #5a6268;
        }

        .status-form {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .status-form select {
            padding: 10px;
            font-size: 14px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            outline: none;
            background-color: #fff;
            width: 200px;
        }

        .status-form select:focus {
            border-color: #010e16;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .update-status-btn,
        .cancel-order-btn {
            padding: 10px 20px;
            font-size: 14px;
            font-weight: 600;
            color: #fff;
            background: linear-gradient(135deg, #050505, #2c3e50);
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .update-status-btn:hover,
        .cancel-order-btn:hover {
            background: linear-gradient(135deg, #00060a, #1a252f);
        }

        .cancel-order-btn {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        .cancel-order-btn:hover {
            background: linear-gradient(135deg, #c82333, #bd2130);
        }

        .error-message {
            color: #e74c3c;
            background-color: #fadbd8;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }

        .no-order {
            text-align: center;
            color: #777;
            font-size: 18px;
            margin-top: 40px;
        }

        @media (max-width: 768px) {
            .orders-details-container {
                padding: 20px;
            }

            .order-section {
                padding: 15px;
            }

            .order-info {
                flex-direction: column;
                gap: 15px;
            }

            .info-item {
                min-width: 100%;
            }

            .order-item {
                flex-direction: column;
                align-items: flex-start;
            }

            .product-image {
                margin-right: 0;
                margin-bottom: 15px;
            }

            .item-actions {
                position: static;
                margin-top: 15px;
                flex-direction: column;
                align-items: flex-start;
            }

            .status-form {
                flex-direction: column;
                align-items: flex-start;
            }

            .status-form select,
            .update-status-btn,
            .cancel-order-btn {
                width: 100%;
            }
        }

        @media (max-width: 576px) {
            .orders-details-title {
                font-size: 24px;
            }

            .section-title {
                font-size: 18px;
            }

            .info-item label,
            .info-item span {
                font-size: 13px;
            }

            .product-name,
            .product-qty,
            .product-price,
            .product-status {
                font-size: 13px;
            }

            .action-btn {
                width: 100%;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <div class="content-wrapper">
        <div class="orders-details-container">
            <h2 class="orders-details-title">Order Details</h2>

            <% if (error) { %>
                <div class="error-message"><%= error %></div>
            <% } %>

            <% if (order) { %>
                <div class="order-section">
                    <h3 class="section-title">Order Information</h3>
                    <div class="order-info">
                        <div class="info-item">
                            <label>Order ID</label>
                            <span><%= order.orderId %></span>
                        </div>
                        <div class="info-item">
                            <label>Customer</label>
                            <span><%= order.user?.name || 'Unknown' %> (<%= order.user?.email || 'N/A' %>)</span>
                        </div>
                        <div class="info-item">
                            <label>Date</label>
                            <span><%= order.createdOn ? order.createdOn.toLocaleDateString('en-GB') : 'N/A' %></span>
                        </div>
                        <div class="info-item">
                            <label>Total</label>
                            <span>â‚¹<%= order.finalAmount.toFixed(2) %></span>
                        </div>
                        <div class="info-item">
                            <label>Status</label>
                            <span class="status-badge <%= order.status === 'Delivered' ? 'status-delivered' : order.status === 'Cancelled' ? 'status-cancelled' : order.status === 'Returned' ? 'status-returned' : order.status === 'Return Request' ? 'status-returned' : 'status-processing' %>">
                                <%= order.status %>
                            </span>
                        </div>
                    </div>
                    <div class="status-form">
                        <select name="status" id="status">
                            <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                            <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                            <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                            <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            <option value="Return Request" <%= order.status === 'Return Request' ? 'selected' : '' %>>Return Request</option>
                            <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                        </select>
                        <button type="button" class="update-status-btn" onclick="updateStatus()">Update Status</button>
                        <% if (order.status !== 'Cancelled' && order.status !== 'Delivered') { %>
                            <!-- <button type="button" class="cancel-order-btn" onclick="cancelOrder()">Cancel Order</button> -->
                        <% } %>
                    </div>
                </div>

                <div class="order-section">
                    <h3 class="section-title">Ordered Items</h3>
                    <% order.orderedItems.forEach(item => { %>
                        <div class="order-item">
                            <div class="product-image">
                                <img src="/Uploads/product-images/<%= item.product?.productImage?.[0] || '/images/placeholder.jpg' %>" alt="<%= item.product?.productName || 'Product' %>">
                            </div>
                            <div class="product-details">
                                <div class="product-name"><%= item.product?.productName || 'Product Name Unavailable' %></div>
                                <div class="product-qty">Quantity: <%= item.quantity %></div>
                                <div class="product-price">Price: â‚¹<%= item.price.toFixed(2) %></div>
                                <div class="product-status">Status: <%= item.returnStatus %>
                                    <% if (item.returnStatus === 'Return Requested') { %>
                                        (Reason: <%= item.returnReason || 'N/A' %>)
                                    <% } %>
                                </div>
                            </div>
                            <div class="item-actions">
                                <% if (order.status !== 'Delivered' && order.status !== 'Cancelled' && item.returnStatus === 'Not Returned') { %>
                                    <button class="action-btn cancel-item-btn" onclick="cancelItem('<%= item._id %>')">Cancel Item</button>
                                <% } %>
                                <% if (item.returnStatus === 'Return Requested') { %>
                                    <button class="action-btn approve-return-btn" onclick="handleReturnRequest('<%= item._id %>', 'approve')">Approve Return</button>
                                    <button class="action-btn reject-return-btn" onclick="handleReturnRequest('<%= item._id %>', 'reject')">Reject Return</button>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                </div>

                <div class="order-section">
                    <h3 class="section-title">Shipping Address</h3>
                    <div class="order-info">
                        <div class="info-item">
                            <label>Name</label>
                            <span><%= order.address?.name || 'N/A' %></span>
                        </div>
                        <div class="info-item">
                            <label>Address</label>
                            <span><%= order.address?.addressType || 'N/A' %>, <%= order.address?.landMark || '' %>, <%= order.address?.city || '' %>, <%= order.address?.state || '' %>, <%= order.address?.pincode || '' %></span>
                        </div>
                        <div class="info-item">
                            <label>Phone</label>
                            <span><%= order.address?.phone || 'N/A' %></span>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="no-order">Order not found.</div>
            <% } %>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Sidebar and layout adjustments
            const sidebar = document.querySelector('.sidebar');
            const sidebarToggle = document.querySelector('.sidebar-toggle');
            const contentWrapper = document.querySelector('.content-wrapper');

            function updateLayout() {
                if (window.innerWidth <= 992) {
                    contentWrapper.classList.remove('collapsed');
                    contentWrapper.style.marginLeft = '0';
                } else {
                    contentWrapper.classList.toggle('collapsed', sidebar.classList.contains('collapsed'));
                    contentWrapper.style.marginLeft = sidebar.classList.contains('collapsed') ? '80px' : '280px';
                }
            }

            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', () => {
                    if (window.innerWidth <= 992) {
                        sidebar.classList.toggle('mobile-visible');
                    } else {
                        sidebar.classList.toggle('collapsed');
                        updateLayout();
                    }
                });
            }

            window.addEventListener('resize', updateLayout);
            updateLayout();
        });

        async function updateStatus() {
            const status = document.getElementById('status').value;
            try {
                const response = await fetch(`/admin/update-order-status/<%= order?.orderId %>`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status })
                });
                const result = await response.json();
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: result.message,
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#2ecc71',
                        timer: 3000,
                        timerProgressBar: true
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message,
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#e74c3c'
                    });
                }
            } catch (error) {
                console.error('Error updating status:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to update order status.',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#e74c3c'
                });
            }
        }

        async function cancelOrder() {
            Swal.fire({
                title: 'Are you sure?',
                text: 'This will cancel the entire order.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, cancel it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/admin/cancel-order', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order?.orderId %>' })
                        });
                        const result = await response.json();
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#2ecc71',
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#e74c3c'
                            });
                        }
                    } catch (error) {
                        console.error('Error cancelling order:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to cancel order.',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#e74c3c'
                        });
                    }
                }
            });
        }

        async function cancelItem(itemId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'This will cancel the selected item.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, cancel it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/admin/cancel-item', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order?.orderId %>', itemId })
                        });
                        const result = await response.json();
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#2ecc71',
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#e74c3c'
                            });
                        }
                    } catch (error) {
                        console.error('Error cancelling item:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed to cancel item.',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#e74c3c'
                        });
                    }
                }
            });
        }

        async function handleReturnRequest(itemId, action) {
            Swal.fire({
                title: `Are you sure you want to ${action} this return request?`,
                text: `This will ${action} the return request for the selected item.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: action === 'approve' ? '#28a745' : '#6c757d',
                cancelButtonColor: '#6c757d',
                confirmButtonText: `Yes, ${action} it!`
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/admin/handle-return-request', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ orderId: '<%= order?.orderId %>', itemId, action })
                        });
                        const result = await response.json();
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#2ecc71',
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: result.message,
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#e74c3c'
                            });
                        }
                    } catch (error) {
                        console.error(`Error ${action}ing return request:`, error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: `Failed to ${action} return request.`,
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#e74c3c'
                        });
                    }
                }
            });
        }
    </script>
</body>
</html>